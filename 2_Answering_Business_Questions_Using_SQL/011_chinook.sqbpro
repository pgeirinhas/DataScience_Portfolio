<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/pgeir/Documents/IEXL_Data_Science_Bootcamp/DataScience_Portfolio/2_Answering_Business_Questions_Using_SQL/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5068"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:maininvoice"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="300"/><column index="3" value="82"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="117"/><column index="2" value="103"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="54"/><column index="8" value="124"/><column index="9" value="115"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="143"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="16" mode="1"/></sort><column_widths><column index="1" value="120"/><column index="2" value="99"/><column index="3" value="103"/><column index="4" value="157"/><column index="5" value="101"/><column index="6" value="162"/><column index="7" value="162"/><column index="8" value="228"/><column index="9" value="85"/><column index="10" value="53"/><column index="11" value="76"/><column index="12" value="115"/><column index="13" value="148"/><column index="14" value="148"/><column index="15" value="214"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats><column index="16" value=""/></display_formats><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="98"/><column index="2" value="117"/><column index="3" value="162"/><column index="4" value="300"/><column index="5" value="167"/><column index="6" value="117"/><column index="7" value="140"/><column index="8" value="179"/><column index="9" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">#'''Question 1: Selecting New Albums to Purchase'''

WITH usa_invoices AS
	(
	SELECT invoice.invoice_id, invoice_line.invoice_line_id, invoice.billing_country, invoice_line.track_id
	FROM invoice
	INNER JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
	WHERE billing_country = &quot;USA&quot;
	),
	usa_genres_invoices AS
	(
	SELECT track.track_id, genre.name
	FROM track
	INNER JOIN usa_invoices ON usa_invoices.track_id = track.track_id
	INNER JOIN genre ON genre.genre_id = track.genre_id
	)

SELECT 
	name as genre,
	COUNT(track_id) AS number_sold_usa,
	ROUND(COUNT(track_id) / CAST((SELECT COUNT(*) FROM usa_genres_invoices) AS FLOAT)*100,1) AS number_sold_percentage
FROM usa_genres_invoices
GROUP BY 1
ORDER BY 2 DESC;

#'''Analysing Employee Sales Performance'''

SELECT first_name || &quot; &quot; || last_name as employee_name, title
FROM employee
WHERE title = 'Sales Support Agent'

---
WITH customer_total_expenditures AS
    (
    SELECT
		COUNT(DISTINCT(c.customer_id)) AS customers_assigned,
		c.support_rep_id,
		ROUND(SUM(i.total),2) AS total
    FROM customer AS c
    INNER JOIN invoice AS i ON i.customer_id = c.customer_id
    GROUP BY 2
    ORDER BY 3 DESC
    ),
     sales_support_agents AS
    (
    SELECT
        employee_id, first_name || &quot; &quot; || last_name AS employee_name,
		ROUND(julianday('2019-06-01') - julianday(hire_date),0) AS days_worked
    FROM employee
    )
    
SELECT 
    ssa.employee_name, ssa.days_worked,
	cte.customers_assigned,
	ROUND(SUM(cte.total),2) AS total,
	ROUND((total/days_worked),2) AS avg_sales_per_work_day
FROM sales_support_agents ssa
INNER JOIN customer_total_expenditures AS cte ON cte.support_rep_id = ssa.employee_id
GROUP BY 1
ORDER BY 3 DESC;

#'''Analysing Sales per Country'''

WITH customers_total_purchases AS
    (
        SELECT
            customer_id,
            COUNT(invoice_id) AS invoices_per_customer,
            ROUND(SUM(total),2) AS total
        FROM invoice
        GROUP BY customer_id
    ),
        final_table AS
    (
        SELECT 
            c.country,
            COUNT(c.country) AS number_of_customers,
            ROUND(SUM(ctp.total),2) AS total,
            SUM(ctp.total)/COUNT(c.country) AS avg_sales_customer,
            SUM(ctp.total)/SUM(invoices_per_customer) AS avg_order_value
        FROM customer AS c
        INNER JOIN customers_total_purchases AS ctp ON ctp.customer_id = c.customer_id
        GROUP BY c.country  
    )

SELECT
    country,
    number_of_customers,
    total,
    ROUND(avg_sales_customer,2) AS avg_sales_customer,
    ROUND(avg_order_value,2) AS avg_order_value
FROM 
    (
    SELECT
        ft.*,
        CASE
            WHEN ft.number_of_customers = 1 THEN 1
            ELSE 0
        END AS sort
    FROM final_table AS ft
    )
ORDER BY 3 DESC, 2 ASC

#'''Albums vs Individual Tracks'''

WITH invoice_first_track AS
    (
    SELECT
        il.invoice_id AS invoice_id,
        MIN(il.track_id) AS first_track_id
    FROM invoice_line AS il
    GROUP BY 1
    )

SELECT
    album_purchase,
    COUNT(invoice_id) AS number_of_invoices,
    COUNT(invoice_id)/(SELECT COUNT(invoice_id) FROM invoice) AS percentage_of_invoices

FROM
    (
    SELECT
        ifs.*,
        CASE
            WHEN
                (SELECT t.track_id FROM track AS t
                 WHERE t.album_id = (
                                    SELECT t2.album_id FROM track AS t2
                                    WHERE t2.track_id = ifs.first_track_id                
                                  ) 
                 EXCEPT
                 
                 SELECT il2.track_id FROM invoice_line AS il2
                 WHERE il2.invoice_id = ifs.invoice_id
                ) IS NULL
            AND
                (SELECT il2.track_id FROM invoice_line AS il2
                 WHERE il2.invoice_id = ifs.invoice_id
                 
                 EXCEPT
                 
                 SELECT t.track_id FROM track AS t
                 WHERE t.album_id = (
                                    SELECT t2.album_id FROM track AS t2
                                    WHERE t2.track_id = ifs.first_track_id                
                                  ) 
                ) IS NULL
            THEN &quot;yes&quot;
            ELSE &quot;no&quot;
        END AS &quot;album_purchase&quot;
    FROM invoice_first_track AS ifs
    )
GROUP BY album_purchase;</sql><current_tab id="0"/></tab_sql></sqlb_project>
